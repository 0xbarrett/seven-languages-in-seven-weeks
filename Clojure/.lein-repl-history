(def big
[st & n]
(< (count st) n) (true) (false))
(defn big
[st & n]
(< (count st) n) (true) (false))
(big "blah" 3)
(defn big
[st n]
(< (count st) n) (true) (false))
(big "blah" 3)
(defn big
[st n]
(< (count st) n)
)
(big "blah" 5)
exit
(class [0, 1, 0])
(class (0, 1, 0))
(class (list 1 2 3))
exit
(defn collection-type
[col]
(if (list? col) :list)
(if (map? col) :map)
(if (vector? col) :vector))
(collection-type (list 1 2 3))
